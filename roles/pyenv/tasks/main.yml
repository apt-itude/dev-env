---
- include_tasks: install.yml

- name: Installing versions
  command: pyenv install "{{ item.version }}"
  args:
    creates: "{{ pyenv_root }}/versions/{{ item.version }}"
  loop: "{{ pyenv_versions | dict2items(key_name='version', value_name='config') }}"

- name: Set global versions
  template:
    src: versions.j2
    dest: "{{ pyenv_root }}/version"
  vars:
    versions: |
      {{
        pyenv_versions |
        dict2items(key_name='version', value_name='config') |
        rejectattr('config', 'none') |
        selectattr('config.global', 'equalto', true) |
        map(attribute='version') |
        sort(reverse=True)
      }}

- name: Enabling pyenv in ZSH
  template:
    src: init.j2
    dest: ~/.dev-env/pyenv/init.sh

- name: Configure ZSH to initialize pyenv
  blockinfile:
    path: ~/.zshrc
    block: |
      if [ -f ~/.dev-env/pyenv/init.sh ]; then
          source ~/.dev-env/pyenv/init.sh
      fi
    marker: "# {mark} BLOCK MANAGED BY DEV-ENV: initialize pyenv"
    create: true
